import matplotlib
import matplotlib.colors as cl
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import row64

def GradientBarsH(inDf, inValueI, inNameI):
 cList = ['#479DDD', '#83B3DF']
 values = inDf[inDf.columns[inValueI]]
 names = inDf[inDf.columns[inNameI]]
 plt.rc('xtick', labelsize=8)
 plt.rc('ytick', labelsize=7)
 y_pos = np.arange(len(names))*-1
 plt.yticks(y_pos, names)
 plt.margins(0.09, 0.03)
 cRGB = [cl.to_rgb(col) for col in cList]
 bars = plt.barh(y_pos, values, color=cList[0])
 cmap = matplotlib.colors.LinearSegmentedColormap.from_list("", cRGB)
 ax = bars[0].axes
 lim = ax.get_xlim()+ax.get_ylim()
 for bar in bars:
  bar.set_facecolor("none")
  x,y = bar.get_xy()
  w, h = bar.get_width(), bar.get_height()
  grad = np.atleast_2d(np.linspace(0,1*w/max(values),256))
  ax.imshow(grad, extent=[x,x+w,y,y+h], aspect="auto", zorder=0, cmap=cmap)
 ax.axis(lim)
 for i, v in enumerate(values):
  ax.text(v+.7, y_pos[i]-.15, str(v), fontdict={'fontsize':6.1})

# From paste
dfIn=row64.get_dataframe("Dataframe8")
df=dfIn.copy(deep=True)
GradientBarsH(df,10,4)
